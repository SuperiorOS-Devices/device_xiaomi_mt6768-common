/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * SPDX-License-Identifier: Apache-2.0
 */

package vendor.goodix.hardware.biometrics.fingerprint@2.1;

/* This HAL interface communicates asynchronous results from the
   fingerprint driver in response to user actions on the fingerprint sensor
*/
interface IGoodixFingerprintDaemonCallback {
    /**
     * Sent when one enrollment step is complete.
     * @param deviceId the instance of this fingerprint device
     * @param fingerId the fingerprint templetate being enrolled
     * @param groupId the groupid for the template being enrolled
     * @param remaining the number of remaining steps before enrolllment is complete
     */
    oneway onEnrollResult(uint64_t deviceId, uint32_t fingerId, uint32_t groupId, uint32_t remaining);

    /**
     * Sent when a fingerprint image is acquired by the sensor
     * @param deviceId the instance of this fingerprint device
     * @param acquiredInfo a message about the quality of the acquired image
     */
    oneway onAcquired(uint64_t deviceId, uint32_t acquiredInfo);

    /**
     * Sent when a fingerprint is authenticated
     * @param deviceId the instance of this fingerprint device
     * @param fingerId the fingerprint templetate that was authenticated
     * @param groupId the groupid for the template that was authenticated
     * @param token the hardware authentication token to pass to Keystore.addAuthToken()
     */
    oneway onAuthenticated(uint64_t deviceId, uint32_t fingerId, uint32_t groupId, vec<uint8_t> token);

    /**
     * Sent when a fingerprint error occurs
     * @param deviceId the instance of this fingerprint device
     * @param error a message about the error that occurred
     */
    oneway onError(uint64_t deviceId, uint32_t error);

    /**
     * Sent when one template is removed
     * @param deviceId the instance of this fingerprint device
     * @param fingerId the fingerprint templetate being removed
     * @param groupId the groupid for the template being removed
     */
    oneway onRemoved(uint64_t deviceId, uint32_t fingerId, uint32_t groupId);

    /**
     * Sent when a test command is completed
     * @param deviceId the instance of this fingerprint device
     * @param cmdId the id of the command sent
     * @param result the result of the command
     */
    oneway onTestCmd(uint64_t deviceId, uint32_t cmdId, vec<uint8_t> result);
};
